@top Program { statement* }

@skip { space | LineComment }

arglist {
  "(" Identifier* ")"
}

binding {
  "[" Identifier expression "]"
}

branch {
  "[" pattern expression "]"
}

pattern {
  Identifier |
  String |
  Boolean |
  PApp { "(" pattern* ")" }
}

expression {
  Identifier |
  String |
  Boolean |
  Lambda { "(" kw<"lambda"> arglist expression ")" } |
  If { "(" kw<"if"> expression expression expression ")" } |
  And { "(" kw<"and"> expression* ")" } |
  Or { "(" kw<"or"> expression* ")" } |
  Begin { "(" kw<"begin"> expression* ")" } |
  Cond { "(" kw<"cond"> binding* expression ")"} |
  Application { "(" expression* ")" } |
  Let { "(" kw<"let"> "(" binding* ")" expression ")" } |
  LetStar { "(" kw<"let*"> "(" binding* ")" expression ")" } |
  Match { "(" kw<"match"> expression branch* ")" }
}

statement {
  Import { "(" kw<"import"> Identifier ")" } |
  Define { "(" kw<"define"> Identifier expression ")" } |
  Display { "(" kw<"display"> expression ")" } |
  SExpr { expression }
}

kw<term> { @specialize[@name={term}]<Identifier, term> }

@tokens {
  Identifier { $[a-zA-Z_\-0-9\+\*\=]+ }

  String { '"' (!["\\] | "\\" _)* '"' }

  Boolean { "#t" | "#f" }

  LineComment { ";" ![\n]* }

  space { $[ \t\n\r]+ }
}

@detectDelim
